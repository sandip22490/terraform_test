version: 0.2

env:
  variables:
    TF_VAR_project_name: "infra"

phases:
  install:
    commands:
      - sudo apt-get install zip gzip tar
      - sudo apt-get install git
      - curl -O -L https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
      - chmod +x jq-linux64
      - sudo mv jq-linux64 /usr/bin/jq
      - wget https://releases.hashicorp.com/terraform/0.11.5/terraform_0.11.5_linux_amd64.zip
      - unzip terraform_0.11.5_linux_amd64.zip
      - sudo mv terraform /usr/local/bin/
      - git clone https://github.com/cunymatthieu/tgenv.git ~/.tgenv
      - export PATH="$HOME/.tgenv/bin:$PATH"
      - tgenv install latest
      - tgenv use latest
      - terraform --version
      - terragrunt --version
        
  build:
    commands:
      # - curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq 'to_entries | [ .[] | select(.key | (contains("Expiration") or contains("RoleArn"))  | not) ] |  map(if .key == "AccessKeyId" then . + {"key":"TF_VAR_access_key"} else . end) | map(if .key == "SecretAccessKey" then . + {"key":"TF_VAR_secret_key"} else . end) | map(if .key == "Token" then . + {"key":"TF_VAR_access_token"} else . end) | map("export \(.key)=\(.value)") | .[]' -r > aws_access_fetched.tfvars
      - echo "$(cat aws_access_fetched.tfvars)"
      - terragrunt init --terragrunt-non-interactive
      - terragrunt plan -out=tfplan
      - terragrunt apply tfplan